{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "api-options",
  "type": "object",
  "properties": {
    "trace": {
      "type": "boolean",
      "description": "If true, log rippled requests and responses to stdout."
    },
    "feeCushion": {
      "type": "number",
      "minimum": 1,
      "description": "Factor to multiply estimated fee by to provide a cushion in case the required fee rises during submission of a transaction. Defaults to `1.2`."
    },
    "servers": {
      "type": "array",
      "description": "Array of rippled servers to connect to. Currently only one server is supported.",
      "items": {
        "type": "string",
        "description": "URI for rippled websocket port. Must start with `wss://` or `ws://`.",
        "format": "uri",
        "pattern": "^wss?://"
      }
    },
    "proxy": {
      "format": "uri",
      "description": "URI for HTTP/HTTPS proxy to use to connect to the rippled server."
    },
    "timeout": {
      "type": "integer",
      "description": "Timeout in milliseconds before considering a request to have failed.",
      "minimum": 1
    },
    "proxyAuthorization": {
      "type": "string",
      "description": "Username and password for HTTP basic authentication to the proxy in the format **username:password**."
    },
    "authorization": {
      "type": "string",
      "description": "Username and password for HTTP basic authentication to the rippled server in the format **username:password**."
    },
    "trustedCertificates": {
      "type": "array",
      "description": "Array of PEM-formatted SSL certificates to trust when connecting to a proxy. This is useful if you want to use a self-signed certificate on the proxy server. Note: Each element must contain a single certificate; concatenated certificates are not valid.",
      "items": {
        "type": "string",
        "description": "A PEM-formatted SSL certificate to trust when connecting to a proxy."
      }
    }
  },
  "additionalProperties": false
}
